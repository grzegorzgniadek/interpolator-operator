name: Release Charts Dev

on:
  push:
    paths:
    - 'charts/**'
    branches:
      - dev

permissions:
  contents: write
  packages: write

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      VERSION_DEV: ${{ steps.read_version.outputs.VERSION_DEV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read VERSION file
        id: read_version
        run: |
          if grep -q "rc" VERSION ; then
            echo "VERSION_DEV=true" >> $GITHUB_OUTPUT
          else
            echo "VERSION_DEV=false" >> $GITHUB_OUTPUT
          fi
  release:
    needs: [check-version]
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.VERSION_DEV == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: 3.10.1

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          mark_as_latest: false
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_GENERATE_RELEASE_NOTES: true
          CR_SKIP_EXISTING: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Charts to GHCR
        run: |
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi

            helm push "${pkg}" oci://ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts
          done
